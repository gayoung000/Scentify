// Îã®Ïùº Í∏∞Í∏∞ ÏòàÏïΩ Ï†ÑÏ≤¥ Ï°∞Ìöå
const fetchReservations = async (deviceId: number, accessToken: string) => {
  try {
    const response = await fetch("/v1/custom/all", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${accessToken}`,
      },
      body: JSON.stringify({ deviceId: deviceId }),
    });

    if (!response.ok) {
      throw new Error(`API Ìò∏Ï∂ú Ïã§Ìå®: ${response.status}`);
    }

    return response.json();
  } catch (error) {
    console.error("ÏòàÏïΩ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:", error);
    throw error;
  }
};
// const fetchReservations = async (deviceId: number, accessToken: string) => {
//   const bodyData = JSON.stringify({ deviceId: deviceId });
//   console.log("üì° ÏòàÏïΩ Ï°∞Ìöå ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞:", bodyData); // Ï†ÑÏÜ°ÎêòÎäî Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏

//   const response = await fetch("/v1/custom/all", {
//     method: "POST",
//     headers: {
//       "Content-Type": "application/json",
//       Authorization: `Bearer ${accessToken}`,
//     },
//     body: bodyData,
//   });

//   if (!response.ok) {
//     const errorText = await response.text(); // ÏÑúÎ≤Ñ ÏùëÎãµ ÎÇ¥Ïö© ÌôïÏù∏
//     console.error(`üö® ÏòàÏïΩ Ï°∞Ìöå Ïã§Ìå® (deviceId: ${deviceId}):`, errorText);
//     throw new Error(`ÏòàÏïΩ Ï°∞Ìöå Ïã§Ìå® (HTTP ${response.status})`);
//   }

//   return response.json();
// };

// Îã®Ïùº Í∏∞Í∏∞ ÏûêÎèôÌôî Î™®Îìú Ï†ÑÏ≤¥ Ï°∞Ìöå
const fetchAutomations = async (deviceId: number, accessToken: string) => {
  const response = await fetch("/v1/auto/all", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${accessToken}`,
    },
    body: JSON.stringify({ deviceId: deviceId }),
  });
  return response.json();
};

// Î™®Îì† Í∏∞Í∏∞ Ï°∞Ìöå
export const getAllDevicesMode = async (
  deviceIds: number[],
  accessToken: string
) => {
  try {
    const deviceData = await Promise.all(
      deviceIds.map(async (id) => {
        const reservations = await fetchReservations(id, accessToken);
        return {
          deviceId: id,
          reservations,
        };
      })
    );
    return deviceData;
  } catch (error) {
    console.error("Í∏∞Í∏∞ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:", error);
    return [];
  }
};
// ÌòÑÏû¨ ÏûêÎèôÌôîÎ™®Îìú api Íµ¨ÌòÑx
// // Î™®Îì† Í∏∞Í∏∞ Ï°∞Ìöå
// export const getAllDevicesMode = async (
//   deviceIds: number[],
//   accessToken: string
// ) => {
//   try {
//     const deviceData = await Promise.all(
//       deviceIds.map(async (id) => {
//         const [reservations, automations] = await Promise.all([
//           fetchReservations(id, accessToken),
//           fetchAutomations(id, accessToken),
//         ]);
//         return {
//           deviceId: id,
//           reservations,
//           automations,
//         };
//       })
//     );
//     return deviceData;
//   } catch (error) {
//     console.error("Í∏∞Í∏∞ Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®:", error);
//     return [];
//   }
// };
